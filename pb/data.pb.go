// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.26.1
// source: data.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportDataV4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookingStatus          string                 `protobuf:"bytes,1,opt,name=BookingStatus,proto3" json:"BookingStatus,omitempty"`
	BookingDate            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=BookingDate,proto3" json:"BookingDate,omitempty"`
	StartTime              *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	DeliveryMedium         string                 `protobuf:"bytes,4,opt,name=DeliveryMedium,proto3" json:"DeliveryMedium,omitempty"`
	Category               string                 `protobuf:"bytes,5,opt,name=Category,proto3" json:"Category,omitempty"`
	Duration               int32                  `protobuf:"varint,6,opt,name=Duration,proto3" json:"Duration,omitempty"`
	ServiceType            string                 `protobuf:"bytes,7,opt,name=ServiceType,proto3" json:"ServiceType,omitempty"`
	ServiceName            string                 `protobuf:"bytes,8,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
	BookingType            string                 `protobuf:"bytes,9,opt,name=BookingType,proto3" json:"BookingType,omitempty"`
	ChannelName            string                 `protobuf:"bytes,10,opt,name=ChannelName,proto3" json:"ChannelName,omitempty"`
	StaffFirstName         string                 `protobuf:"bytes,11,opt,name=StaffFirstName,proto3" json:"StaffFirstName,omitempty"`
	StaffLastName          string                 `protobuf:"bytes,12,opt,name=StaffLastName,proto3" json:"StaffLastName,omitempty"`
	StaffEmail             string                 `protobuf:"bytes,13,opt,name=StaffEmail,proto3" json:"StaffEmail,omitempty"`
	StaffRole              string                 `protobuf:"bytes,14,opt,name=StaffRole,proto3" json:"StaffRole,omitempty"`
	CustomerEmail          string                 `protobuf:"bytes,15,opt,name=CustomerEmail,proto3" json:"CustomerEmail,omitempty"`
	BuildingCode           string                 `protobuf:"bytes,16,opt,name=BuildingCode,proto3" json:"BuildingCode,omitempty"`
	RoomName               string                 `protobuf:"bytes,17,opt,name=RoomName,proto3" json:"RoomName,omitempty"`
	RoomCode               string                 `protobuf:"bytes,18,opt,name=RoomCode,proto3" json:"RoomCode,omitempty"`
	BookingId              string                 `protobuf:"bytes,19,opt,name=BookingId,proto3" json:"BookingId,omitempty"`
	ClassId                string                 `protobuf:"bytes,20,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
	BookedByEmail          string                 `protobuf:"bytes,21,opt,name=BookedByEmail,proto3" json:"BookedByEmail,omitempty"`
	UpdatedDateTime        *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=UpdatedDateTime,proto3" json:"UpdatedDateTime,omitempty"`
	UpdatedBy              string                 `protobuf:"bytes,23,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	CostCategory           string                 `protobuf:"bytes,24,opt,name=CostCategory,proto3" json:"CostCategory,omitempty"`
	CostTier               string                 `protobuf:"bytes,25,opt,name=CostTier,proto3" json:"CostTier,omitempty"`
	AmountPaid             float32                `protobuf:"fixed32,26,opt,name=AmountPaid,proto3" json:"AmountPaid,omitempty"`
	AmountRefunded         float32                `protobuf:"fixed32,27,opt,name=AmountRefunded,proto3" json:"AmountRefunded,omitempty"`
	ReminderSentYn         string                 `protobuf:"bytes,28,opt,name=ReminderSentYn,proto3" json:"ReminderSentYn,omitempty"`
	ItemType               string                 `protobuf:"bytes,29,opt,name=ItemType,proto3" json:"ItemType,omitempty"`
	CurrencyType           string                 `protobuf:"bytes,30,opt,name=CurrencyType,proto3" json:"CurrencyType,omitempty"`
	PaymentStatus          string                 `protobuf:"bytes,31,opt,name=PaymentStatus,proto3" json:"PaymentStatus,omitempty"`
	PaymentTimestamp       *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=PaymentTimestamp,proto3" json:"PaymentTimestamp,omitempty"`
	PaymentRefundDate      *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=PaymentRefundDate,proto3" json:"PaymentRefundDate,omitempty"`
	PaymentReason          string                 `protobuf:"bytes,34,opt,name=PaymentReason,proto3" json:"PaymentReason,omitempty"`
	Timezone               string                 `protobuf:"bytes,35,opt,name=Timezone,proto3" json:"Timezone,omitempty"`
	CapacityConfirmed      int64                  `protobuf:"varint,36,opt,name=CapacityConfirmed,proto3" json:"CapacityConfirmed,omitempty"`
	CapacityWaitlist       int64                  `protobuf:"varint,37,opt,name=CapacityWaitlist,proto3" json:"CapacityWaitlist,omitempty"`
	UserDepartment         string                 `protobuf:"bytes,38,opt,name=UserDepartment,proto3" json:"UserDepartment,omitempty"`
	UserBusiness           string                 `protobuf:"bytes,39,opt,name=UserBusiness,proto3" json:"UserBusiness,omitempty"`
	DivisionConpanyCode    string                 `protobuf:"bytes,40,opt,name=DivisionConpanyCode,proto3" json:"DivisionConpanyCode,omitempty"`
	LocalStartTime         string                 `protobuf:"bytes,41,opt,name=LocalStartTime,proto3" json:"LocalStartTime,omitempty"`
	DayOfWeek              string                 `protobuf:"bytes,42,opt,name=DayOfWeek,proto3" json:"DayOfWeek,omitempty"`
	LocationCode           string                 `protobuf:"bytes,43,opt,name=LocationCode,proto3" json:"LocationCode,omitempty"`
	ShiftId                string                 `protobuf:"bytes,44,opt,name=ShiftId,proto3" json:"ShiftId,omitempty"`
	ExternalAttendeesCount int64                  `protobuf:"varint,45,opt,name=ExternalAttendeesCount,proto3" json:"ExternalAttendeesCount,omitempty"`
}

func (x *ReportDataV4) Reset() {
	*x = ReportDataV4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDataV4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDataV4) ProtoMessage() {}

func (x *ReportDataV4) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDataV4.ProtoReflect.Descriptor instead.
func (*ReportDataV4) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

func (x *ReportDataV4) GetBookingStatus() string {
	if x != nil {
		return x.BookingStatus
	}
	return ""
}

func (x *ReportDataV4) GetBookingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BookingDate
	}
	return nil
}

func (x *ReportDataV4) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ReportDataV4) GetDeliveryMedium() string {
	if x != nil {
		return x.DeliveryMedium
	}
	return ""
}

func (x *ReportDataV4) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ReportDataV4) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ReportDataV4) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *ReportDataV4) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ReportDataV4) GetBookingType() string {
	if x != nil {
		return x.BookingType
	}
	return ""
}

func (x *ReportDataV4) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ReportDataV4) GetStaffFirstName() string {
	if x != nil {
		return x.StaffFirstName
	}
	return ""
}

func (x *ReportDataV4) GetStaffLastName() string {
	if x != nil {
		return x.StaffLastName
	}
	return ""
}

func (x *ReportDataV4) GetStaffEmail() string {
	if x != nil {
		return x.StaffEmail
	}
	return ""
}

func (x *ReportDataV4) GetStaffRole() string {
	if x != nil {
		return x.StaffRole
	}
	return ""
}

func (x *ReportDataV4) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *ReportDataV4) GetBuildingCode() string {
	if x != nil {
		return x.BuildingCode
	}
	return ""
}

func (x *ReportDataV4) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *ReportDataV4) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *ReportDataV4) GetBookingId() string {
	if x != nil {
		return x.BookingId
	}
	return ""
}

func (x *ReportDataV4) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *ReportDataV4) GetBookedByEmail() string {
	if x != nil {
		return x.BookedByEmail
	}
	return ""
}

func (x *ReportDataV4) GetUpdatedDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDateTime
	}
	return nil
}

func (x *ReportDataV4) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ReportDataV4) GetCostCategory() string {
	if x != nil {
		return x.CostCategory
	}
	return ""
}

func (x *ReportDataV4) GetCostTier() string {
	if x != nil {
		return x.CostTier
	}
	return ""
}

func (x *ReportDataV4) GetAmountPaid() float32 {
	if x != nil {
		return x.AmountPaid
	}
	return 0
}

func (x *ReportDataV4) GetAmountRefunded() float32 {
	if x != nil {
		return x.AmountRefunded
	}
	return 0
}

func (x *ReportDataV4) GetReminderSentYn() string {
	if x != nil {
		return x.ReminderSentYn
	}
	return ""
}

func (x *ReportDataV4) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *ReportDataV4) GetCurrencyType() string {
	if x != nil {
		return x.CurrencyType
	}
	return ""
}

func (x *ReportDataV4) GetPaymentStatus() string {
	if x != nil {
		return x.PaymentStatus
	}
	return ""
}

func (x *ReportDataV4) GetPaymentTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentTimestamp
	}
	return nil
}

func (x *ReportDataV4) GetPaymentRefundDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentRefundDate
	}
	return nil
}

func (x *ReportDataV4) GetPaymentReason() string {
	if x != nil {
		return x.PaymentReason
	}
	return ""
}

func (x *ReportDataV4) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *ReportDataV4) GetCapacityConfirmed() int64 {
	if x != nil {
		return x.CapacityConfirmed
	}
	return 0
}

func (x *ReportDataV4) GetCapacityWaitlist() int64 {
	if x != nil {
		return x.CapacityWaitlist
	}
	return 0
}

func (x *ReportDataV4) GetUserDepartment() string {
	if x != nil {
		return x.UserDepartment
	}
	return ""
}

func (x *ReportDataV4) GetUserBusiness() string {
	if x != nil {
		return x.UserBusiness
	}
	return ""
}

func (x *ReportDataV4) GetDivisionConpanyCode() string {
	if x != nil {
		return x.DivisionConpanyCode
	}
	return ""
}

func (x *ReportDataV4) GetLocalStartTime() string {
	if x != nil {
		return x.LocalStartTime
	}
	return ""
}

func (x *ReportDataV4) GetDayOfWeek() string {
	if x != nil {
		return x.DayOfWeek
	}
	return ""
}

func (x *ReportDataV4) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *ReportDataV4) GetShiftId() string {
	if x != nil {
		return x.ShiftId
	}
	return ""
}

func (x *ReportDataV4) GetExternalAttendeesCount() int64 {
	if x != nil {
		return x.ExternalAttendeesCount
	}
	return 0
}

type ReportsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reports []*ReportDataV4 `protobuf:"bytes,1,rep,name=Reports,proto3" json:"Reports,omitempty"`
}

func (x *ReportsList) Reset() {
	*x = ReportsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportsList) ProtoMessage() {}

func (x *ReportsList) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportsList.ProtoReflect.Descriptor instead.
func (*ReportsList) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

func (x *ReportsList) GetReports() []*ReportDataV4 {
	if x != nil {
		return x.Reports
	}
	return nil
}

var File_data_proto protoreflect.FileDescriptor

var file_data_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61,
	0x69, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x0d, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x56, 0x34, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x64, 0x69, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f,
	0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x6e, 0x74, 0x59, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x74, 0x59, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x46, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x11, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x57, 0x61,
	0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x44, 0x69,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65,
	0x6b, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65,
	0x65, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56, 0x34, 0x52, 0x07, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x74, 0x68, 0x61, 0x72, 0x75, 0x6e, 0x72, 0x65, 0x64, 0x64, 0x79, 0x2f, 0x44, 0x65, 0x73, 0x6b,
	0x74, 0x6f, 0x70, 0x2f, 0x53, 0x46, 0x54, 0x50, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_proto_rawDescOnce sync.Once
	file_data_proto_rawDescData = file_data_proto_rawDesc
)

func file_data_proto_rawDescGZIP() []byte {
	file_data_proto_rawDescOnce.Do(func() {
		file_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_proto_rawDescData)
	})
	return file_data_proto_rawDescData
}

var file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_data_proto_goTypes = []interface{}{
	(*ReportDataV4)(nil),          // 0: main.ReportDataV4
	(*ReportsList)(nil),           // 1: main.ReportsList
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_data_proto_depIdxs = []int32{
	2, // 0: main.ReportDataV4.BookingDate:type_name -> google.protobuf.Timestamp
	2, // 1: main.ReportDataV4.StartTime:type_name -> google.protobuf.Timestamp
	2, // 2: main.ReportDataV4.UpdatedDateTime:type_name -> google.protobuf.Timestamp
	2, // 3: main.ReportDataV4.PaymentTimestamp:type_name -> google.protobuf.Timestamp
	2, // 4: main.ReportDataV4.PaymentRefundDate:type_name -> google.protobuf.Timestamp
	0, // 5: main.ReportsList.Reports:type_name -> main.ReportDataV4
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_data_proto_init() }
func file_data_proto_init() {
	if File_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDataV4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_proto_goTypes,
		DependencyIndexes: file_data_proto_depIdxs,
		MessageInfos:      file_data_proto_msgTypes,
	}.Build()
	File_data_proto = out.File
	file_data_proto_rawDesc = nil
	file_data_proto_goTypes = nil
	file_data_proto_depIdxs = nil
}
